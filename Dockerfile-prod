FROM debian:buster-slim
MAINTAINER Italo Valcy <italo@amlight.net>

RUN apt-get update && apt-get install -y --no-install-recommends \
	python3-setuptools patch python3-pip iproute2 procps curl git-core \
        vim jq less tmux nginx \
	&& apt-get clean \
	&& rm -rf /var/lib/apt/lists/*

RUN python3 -m pip install setuptools==60.2.0
RUN python3 -m pip install pip==21.3.1
RUN python3 -m pip install wheel==0.37
RUN python3 -m pip install https://github.com/kytos-ng/python-openflow/archive/master.zip
RUN python3 -m pip install https://github.com/kytos-ng/kytos-utils/archive/master.zip
RUN python3 -m pip install https://github.com/kytos-ng/kytos/archive/master.zip

COPY kytos.conf /etc/kytos/
COPY logging.ini /etc/kytos/
RUN sed -i "s/XXXJWTSECRETXXX/$(python3 -c 'import secrets; print(secrets.token_hex(16))')/g" /etc/kytos/kytos.conf
RUN mkdir /var/log/kytos && touch /var/log/kytos/kytos-error.log /var/log/kytos/kytos.log

RUN python3 -m pip install -e git+https://github.com/kytos-ng/storehouse@fix/install_req_deps#egg=kytos-storehouse
RUN python3 -m pip install -e git+https://github.com/kytos-ng/of_core#egg=kytos-of_core
RUN python3 -m pip install -e git+https://github.com/kytos-ng/flow_manager#egg=kytos-flow_manager
RUN python3 -m pip install -e git+https://github.com/kytos-ng/topology#egg=kytos-topology
RUN python3 -m pip install -e git+https://github.com/kytos-ng/of_lldp#egg=kytos-of_lldp
RUN python3 -m pip install -e git+https://github.com/kytos-ng/pathfinder@fix/install_req_deps#egg=kytos-pathfinder
RUN python3 -m pip install -e git+https://github.com/kytos-ng/mef_eline@fix/install_req_deps#egg=kytos-mef_eline
RUN python3 -m pip install -e git+https://github.com/kytos-ng/maintenance#egg=kytos-maintenance
RUN python3 -m pip install -e git+https://github.com/amlight/coloring@fix/install_req_deps#egg=amlight-coloring
RUN python3 -m pip install -e git+https://github.com/amlight/sdntrace@fix/install_req_deps#egg=amlight-sdntrace

COPY ./apply-patches.sh  /tmp/
COPY ./patches /tmp/patches

RUN cd /tmp && ./apply-patches.sh && rm -rf /tmp/*

COPY ./nginx.conf /etc/nginx/conf.d/default.conf
COPY ./nginx.htpasswd /etc/nginx/nginx.htpasswd

WORKDIR /
COPY docker-entrypoint.sh /docker-entrypoint.sh

EXPOSE 6653
EXPOSE 8080

ENTRYPOINT ["/docker-entrypoint.sh"]
